Index: projetoFinalRestaurante/src/Main.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import model.*;\r\nimport repository.*;\r\n\r\n\r\nimport javax.swing.*;\r\nimport java.math.BigDecimal;\r\nimport java.time.LocalDate;\r\nimport java.time.format.DateTimeParseException;\r\nimport java.util.List;\r\n\r\nimport static repository.PlanejamentoProducaoDAO.planeja;\r\n\r\n\r\npublic class Main {\r\n\r\n\r\n    public static void main(String[] args) {\r\n        ProdutoDAO.inputProdutos();\r\n        CompraDAO.inputCompras();\r\n        ReceitaDAO.inputReceita();\r\n        VendaDAO.inputVendas();\r\n        chamaMenuPrincipal();\r\n    }\r\n\r\n    private static void chamaMenuPrincipal() {\r\n        String[] opcoesMenuPrincipal = {\"Planejamento de Produção\", \"Estoque\", \"Compra\", \"Receita\", \"Cardápio\", \"Venda\", \"Relatórios\", \"Sair\"};\r\n        int opcaoMenuPrincipal = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Menu Principal\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuPrincipal, opcoesMenuPrincipal[0]);\r\n        switch (opcaoMenuPrincipal) {\r\n            case 0: //Planejamento de produção\r\n                chamaMenuPlanejamento();\r\n                break;\r\n            case 1: //Estoque\r\n                chamaMenuEstoque();\r\n                break;\r\n            case 2: //Compra\r\n                chamaMenuCadastroCompra();\r\n                break;\r\n            case 3:// Receitas\r\n                chamaMenuCadastroReceitas();\r\n                break;\r\n            case 4:// Cardapio\r\n                // chamaMenuCardapio();\r\n                break;\r\n            case 5:// Vendas\r\n                chamaMenuVenda();\r\n                break;\r\n            case 6:// Relatorios\r\n                chamaMenuRelatorios();\r\n                break;\r\n        }\r\n    }\r\n\r\n//    private static void cadastroDeCliente() {\r\n//        String nome = JOptionPane.showInputDialog(null, \"Digite o nome do cliente\");\r\n//        String cpf = JOptionPane.showInputDialog(null, \"Digite o cpf do cliente\");\r\n//        String email = JOptionPane.showInputDialog(null, \"Digite o email do cliente\");\r\n//        ClienteExemplo cliente = new ClienteExemplo(nome, cpf, email);\r\n//        ClienteDAOExemplo.salvar(cliente);\r\n//        chamaMenuPrincipal();\r\n//    }\r\n\r\n    private static void chamaMenuPlanejamento() {\r\n        String[] opcoesMenuPlanejamento = {\"Cadastrar planejamento\", \"Planejamento\", \"Voltar\"};\r\n        int menuPlanejamento = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Cadastrar\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuPlanejamento, opcoesMenuPlanejamento[0]);\r\n\r\n        switch (menuPlanejamento) {\r\n            case 0: //Cadastrar Planejamento\r\n                cadastroPlanejamento();\r\n                break;\r\n            case 1: //Planejado\r\n                // planeja()\r\n                break;\r\n            case 2: //Voltar\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    private static void cadastroPlanejamento() {\r\n        LocalDate dataPlanejamento = LocalDate.now();\r\n        String inputData = JOptionPane.showInputDialog(null, \"Digite uma data (formato: dd/MM/yyyy):\",\r\n                \"Cadastrar Planejamento\", JOptionPane.DEFAULT_OPTION);\r\n        try {\r\n            dataPlanejamento = LocalDate.parse(inputData, java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));\r\n        } catch (DateTimeParseException e) {\r\n            JOptionPane.showMessageDialog(null, \"Formato inválido!\",\r\n                    \"Cadastrar Planejamento\", JOptionPane.ERROR_MESSAGE);\r\n            chamaMenuPlanejamento();\r\n        }\r\n\r\n\r\n    }\r\n\r\n    private static void chamaMenuEstoque() {\r\n        String[] opcoesMenuCadastro = {\"Cadastrar Produto\", \"Remover Produto\", \"Voltar\"};\r\n        int menuCadastro = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Estoque\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastro, opcoesMenuCadastro[0]);\r\n\r\n        switch (menuCadastro) {\r\n            case 0: //CadastrarProduto\r\n                menuCadastroProduto();\r\n                break;\r\n            case 1: //RemoverProduto\r\n                removerProduto();\r\n                break;\r\n            case 2: //Voltar\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n    private static void menuCadastroProduto(){\r\n        String[] opcoesMenuCadastro = {\"Bebida\", \"Ingrediente\", \"Voltar\"};\r\n        int menuCadastro = JOptionPane.showOptionDialog(null, \"Escolha o tipo de produto que deseja cadastrar:\",\r\n                \"Cadastro Produto\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastro, opcoesMenuCadastro[0]);\r\n\r\n        switch (menuCadastro) {\r\n            case 0: //CadastrarProdutoBebida\r\n                cadastroProdutoBebida();\r\n                break;\r\n            case 1: //RemoverProdutoIngrediente\r\n                cadastroProdutoIngrediente();\r\n                break;\r\n            case 2: //Voltar\r\n                chamaMenuEstoque();\r\n                break;\r\n        }\r\n\r\n    }\r\n    private static void cadastroProdutoIngrediente() {\r\n\r\n        ProdutoEnum[] opcoesTipoPagamento = {ProdutoEnum.BEBIBA, ProdutoEnum.INGREDIENTE};\r\n\r\n        Integer id = Integer.parseInt(JOptionPane.showInputDialog(null, \"Informe o id:\",\r\n                \"Cadastro Produto Ingrediente\", JOptionPane.DEFAULT_OPTION));\r\n        String nomeProduto = JOptionPane.showInputDialog(null, \"Informe o nome:\",\r\n                \"Cadastro Produto Ingrediente\", JOptionPane.DEFAULT_OPTION);\r\n\r\n        Produto produto1 = new Produto(id, nomeProduto, opcoesTipoPagamento[1]);\r\n\r\n\r\n        String[] opcoesMenuCadastroProduto = {\"Novo Cadastro\", \"Cancelar\", \"Finalizar Cadastro\"};\r\n        int menuCadastroProduto = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Cadastrar Produto\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastroProduto, opcoesMenuCadastroProduto[0]);\r\n\r\n        switch (menuCadastroProduto) {\r\n            case 0: //NovoCadastro\r\n                ProdutoDAO.salvarListaProdutos(produto1);\r\n                menuCadastroProduto();\r\n                break;\r\n            case 1: //Cancelar\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 2: //Finalizar Cadastro\r\n                ProdutoDAO.salvarListaProdutos(produto1);\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private static void cadastroProdutoBebida() {\r\n\r\n        ProdutoEnum[] opcoesTipoProduto = {ProdutoEnum.BEBIBA, ProdutoEnum.INGREDIENTE};\r\n\r\n        Integer id = Integer.parseInt(JOptionPane.showInputDialog(null, \"Informe o id:\",\r\n                \"Cadastro Produto Bebida\", JOptionPane.DEFAULT_OPTION));\r\n        String nomeProduto = JOptionPane.showInputDialog(null, \"Informe o nome:\",\r\n                \"Cadastro Produto Bebida\", JOptionPane.DEFAULT_OPTION);\r\n\r\n        BigDecimal valorCustoBebida = BigDecimal.valueOf(Double.parseDouble(JOptionPane.showInputDialog(null,\"Infome o valor de custo:\",\r\n                \"Cadastrar Produto Bebida\", JOptionPane.DEFAULT_OPTION)));\r\n\r\n        Produto produto1 = new Produto(id,nomeProduto,opcoesTipoPagamento[0],valorCustoBebida);\r\n\r\n        String[] opcoesMenuCadastroProduto = {\"Novo Cadastro\", \"Cancelar\", \"Finalizar Cadastro\"};\r\n        int menuCadastroProduto = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Cadastrar Produto\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastroProduto, opcoesMenuCadastroProduto[0]);\r\n\r\n        switch (menuCadastroProduto) {\r\n            case 0: //NovoCadastro\r\n                ProdutoDAO.salvarListaProdutos(produto1);\r\n                menuCadastroProduto();\r\n                break;\r\n            case 1: //Cancelar\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 2: //Finalizar Cadastro\r\n                ProdutoDAO.salvarListaProdutos(produto1);\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private static void removerProduto() {\r\n\r\n        Object[] selectionValuesProdutos = ProdutoDAO.findprodutosInArray();\r\n        String initialSelectionProduto = (String) selectionValuesProdutos[0];\r\n        Object selectionProduto = JOptionPane.showInputDialog(null, \"Selecione o produto para remover:\",\r\n                \"Remover Produto\", JOptionPane.DEFAULT_OPTION, null, selectionValuesProdutos, initialSelectionProduto);\r\n        List<Produto> produtos = ProdutoDAO.buscarPorNome((String) selectionProduto);\r\n        ProdutoDAO.removerProduto(produtos.get(0));\r\n        chamaMenuPrincipal();\r\n    }\r\n\r\n    private static void chamaMenuCadastroCompra() {\r\n        String[] opcoesMenuCadastroCompra = {\"Cadastrar Compra\", \"Remover Compra\", \"Editar Compra\", \"Voltar\"};\r\n        int menuCadastroCompra = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Cadastrar Compras\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastroCompra, opcoesMenuCadastroCompra[0]);\r\n\r\n        switch (menuCadastroCompra) {\r\n            case 0: //Adicionar Compra\r\n                cadastroCompra();\r\n                break;\r\n            case 1: //Remover Compra\r\n\r\n                break;\r\n            case 2: //Editar Compra\r\n\r\n                break;\r\n            case 3: //Voltar\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n    private static void cadastroCompra() {\r\n\r\n        try {\r\n            UnidadeMedidaEnum[] opcoesUnidadeMedida = {UnidadeMedidaEnum.KILO, UnidadeMedidaEnum.GRAMA, UnidadeMedidaEnum.LITRO,\r\n                    UnidadeMedidaEnum.MILILITRO, UnidadeMedidaEnum.UNIDADE};\r\n\r\n            Integer id = CompraDAO.aiID();\r\n\r\n            LocalDate dataCompra = LocalDate.now();\r\n            String inputData = JOptionPane.showInputDialog(null, \"Digite uma data (formato: dd/MM/yyyy):\",\r\n                    \"Cadastrar Compra\", JOptionPane.DEFAULT_OPTION);\r\n            try {\r\n                dataCompra = LocalDate.parse(inputData, java.time.format.DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));\r\n            } catch (DateTimeParseException e) {\r\n                JOptionPane.showMessageDialog(null, \"Formato inválido!\",\r\n                        \"Cadastrar Compra\", JOptionPane.ERROR_MESSAGE);\r\n                cadastroCompra();\r\n            }\r\n\r\n            Object[] selectionValuesProdutos = ProdutoDAO.findprodutosInArray();\r\n            String initialSelectionProduto = (String) selectionValuesProdutos[0];\r\n            Object selectionProduto = JOptionPane.showInputDialog(null, \"Selecione o produto da compra\",\r\n                    \"Cadastrar Compra\", JOptionPane.DEFAULT_OPTION, null, selectionValuesProdutos, initialSelectionProduto);\r\n            List<Produto> produtos = ProdutoDAO.buscarPorNome((String) selectionProduto);\r\n\r\n            Double quantidade = Double.parseDouble(JOptionPane.showInputDialog(null, \"Digite a quantidade\",\r\n                    \"Cadastrar Compra\", JOptionPane.DEFAULT_OPTION));\r\n            int tipoUnidadeSelecionado = JOptionPane.showOptionDialog(null, \"Informe a unidade de medida:\",\r\n                    \"Cadastrar Compra\",\r\n                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesUnidadeMedida, opcoesUnidadeMedida[0]);\r\n            Compra compra = new Compra(id, dataCompra, produtos.get(0), quantidade, opcoesUnidadeMedida[tipoUnidadeSelecionado]);\r\n            CompraDAO.salvarNovaCompra(compra);\r\n            chamaMenuPrincipal();\r\n        } catch (NullPointerException nullPointerException) {\r\n            chamaMenuPrincipal(); // tratamento de erro se clica em cancelar ( não sei se esta certo mas funcionou XD)\r\n        }\r\n    }\r\n\r\n    public static void chamaMenuCadastroReceitas() {\r\n        String[] opcoesMenuCadastro = {\"Cadastrar Receita\", \"Remover Receita\", \"Editar Receita\", \"Voltar\"};\r\n        int menuCadastro = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Receita\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastro, opcoesMenuCadastro[0]);\r\n\r\n        switch (menuCadastro) {\r\n            case 0: //CadastrarReceita\r\n                cadastroReceita();\r\n                break;\r\n            case 1: //RemoverReceita\r\n                removerReceita();\r\n                break;\r\n            case 2: //EditarReceita\r\n                editarReceita();\r\n                break;\r\n            case 3: //Voltar\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public static void cadastroReceita() {\r\n\r\n        Integer x = 0;\r\n\r\n        UnidadeMedidaEnum[] opcoesUnidadeMedida = {UnidadeMedidaEnum.KILO, UnidadeMedidaEnum.GRAMA, UnidadeMedidaEnum.LITRO,\r\n                UnidadeMedidaEnum.MILILITRO, UnidadeMedidaEnum.UNIDADE};\r\n        ReceitaClasseEnum[] opcoesReceitaClasse = {ReceitaClasseEnum.ENTRADA, ReceitaClasseEnum.MASSA, ReceitaClasseEnum.RISOTO,\r\n                ReceitaClasseEnum.CARNE, ReceitaClasseEnum.SOBREMESA};\r\n\r\n        Integer id = Integer.parseInt(JOptionPane.showInputDialog(null, \"Informe o ID:\",\r\n                \"Cadastrar Receita\", JOptionPane.DEFAULT_OPTION));\r\n        String nome = JOptionPane.showInputDialog(null, \"Informe o nome:\",\r\n                \"Cadastrar Receita\", JOptionPane.DEFAULT_OPTION);\r\n        int receitaClasseSelecionado = JOptionPane.showOptionDialog(null, \"Escolha a classe da receita:\",\r\n                \"Cadastrar Receita\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesReceitaClasse, opcoesReceitaClasse[0]);\r\n        BigDecimal valorCusto = BigDecimal.valueOf(Double.parseDouble(JOptionPane.showInputDialog(null, \"Infome o valor de custo:\",\r\n                \"Cadastrar Receita\", JOptionPane.DEFAULT_OPTION)));\r\n\r\n        Receita receita1 = new Receita(id, nome, opcoesReceitaClasse[receitaClasseSelecionado], valorCusto);\r\n\r\n        do {\r\n            Object[] selectionValuesProdutos = ProdutoDAO.findprodutosInArrayIngrediente();\r\n            String initialSelectionProduto = (String) selectionValuesProdutos[0];\r\n            Object selectionProduto = JOptionPane.showInputDialog(null, \"Selecione o ingrediente da Receita\",\r\n                    \"Cadastrar Receita\", JOptionPane.DEFAULT_OPTION, null, selectionValuesProdutos, initialSelectionProduto);\r\n            List<Produto> produtos = ProdutoDAO.buscarPorNome((String) selectionProduto);\r\n\r\n            Double quantidade = Double.parseDouble(JOptionPane.showInputDialog(null, \"Informe a quantidade\",\r\n                    \"Cadastrar Receita\", JOptionPane.DEFAULT_OPTION));\r\n\r\n            int tipoUnidadeSelecionado = JOptionPane.showOptionDialog(null, \"Informe a unidade de medida:\",\r\n                    \"Cadastrar Receita\",\r\n                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesUnidadeMedida, opcoesUnidadeMedida[0]);\r\n\r\n            ReceitaIngrediente ingrediente = new ReceitaIngrediente(produtos.get(0), quantidade, opcoesUnidadeMedida[tipoUnidadeSelecionado]);\r\n            receita1.adicionarIngrediente(ingrediente);\r\n\r\n            String[] opcoesMenuCadastroReceita = {\"Adicionar Novo Ingrediente\", \"Finalizar Cadastro Ingrediente\"};\r\n            int menuCadastroReceita = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                    \"Cadastrar Receita Ingredientes\",\r\n                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastroReceita, opcoesMenuCadastroReceita[0]);\r\n\r\n            switch (menuCadastroReceita) {\r\n                case 0: //Adicionar Novo Ingrediente\r\n\r\n                    break;\r\n                case 1: //Finaliza Cadastro Ingrediente\r\n                    x = 2;\r\n                    break;\r\n            }\r\n        }\r\n        while (x <= 0);\r\n\r\n        String[] opcoesMenuCadastroReceita = {\"Novo Cadastro Receita\", \"Cancelar\", \"Finalizar Cadastro Receita\"};\r\n        int menuCadastroReceita = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Cadastrar Receita\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastroReceita, opcoesMenuCadastroReceita[0]);\r\n\r\n        switch (menuCadastroReceita) {\r\n            case 0: //NovoCadastro\r\n                ReceitaDAO.salvarNovaReceita(receita1);\r\n                cadastroReceita();\r\n                break;\r\n            case 1: //Cancelar\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 2: //Finalizar Cadastro\r\n                ReceitaDAO.salvarNovaReceita(receita1);\r\n                chamaMenuPrincipal();\r\n                break;\r\n\r\n\r\n        }\r\n    }\r\n\r\n    private static void removerReceita() {\r\n\r\n        Object[] selectionValuesReceita = ReceitaDAO.findreceitasInArray();\r\n        String initialSelectionReceita = (String) selectionValuesReceita[0];\r\n        Object selectionProduto = JOptionPane.showInputDialog(null, \"Selecione a receita para remover:\",\r\n                \"Remover Receita\", JOptionPane.DEFAULT_OPTION, null, selectionValuesReceita, initialSelectionReceita);\r\n        Integer receitas = ReceitaDAO.buscaPosicaoReceita((String) selectionProduto);\r\n        ReceitaDAO.removerReceita(receitas);\r\n        chamaMenuCadastroReceitas();\r\n    }\r\n\r\n    private static void editarReceita() {\r\n\r\n        ReceitaClasseEnum[] opcoesReceitaClasse = {ReceitaClasseEnum.ENTRADA, ReceitaClasseEnum.MASSA, ReceitaClasseEnum.RISOTO,\r\n                ReceitaClasseEnum.CARNE, ReceitaClasseEnum.SOBREMESA};\r\n\r\n        Object[] selectionValuesReceita = ReceitaDAO.findreceitasInArray();\r\n        String initialSelectionReceita = (String) selectionValuesReceita[0];\r\n        Object selectionProduto = JOptionPane.showInputDialog(null, \"Selecione a receita para editar:\",\r\n                \"Editar Receita\", JOptionPane.DEFAULT_OPTION, null, selectionValuesReceita, initialSelectionReceita);\r\n        Integer receitas = ReceitaDAO.buscaPosicaoReceita((String) selectionProduto);\r\n\r\n        String[] opcoesEditarReceita = {\"ID\", \"Nome\", \"Classe\", \"Valor de custo\", \"Ingredientes\"};\r\n        int menuEditarReceita = JOptionPane.showOptionDialog(null, \"Escolha a opção que você deseja editar do(a) \" +\r\n                        ReceitaDAO.buscaTodos().get(receitas).getNome() + \":\", \"Editar Receita\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesEditarReceita, opcoesEditarReceita[0]);\r\n\r\n        switch (menuEditarReceita) {\r\n            case 0: //editarReceitaID\r\n                Integer id = Integer.parseInt(JOptionPane.showInputDialog(null, \"Informe o NOVO ID da(o) \" +\r\n                        ReceitaDAO.buscaTodos().get(receitas).getNome() + \":\", \"Editar Receita\", JOptionPane.DEFAULT_OPTION));\r\n                ReceitaDAO.editarReceitaId(receitas, id);\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 1: //editarReceitaNome\r\n                String nome = JOptionPane.showInputDialog(null, \"Informe o NOVO NOME para substituir \"\r\n                        + ReceitaDAO.buscaTodos().get(receitas).getNome() + \":\", \"Editar Receita\", JOptionPane.DEFAULT_OPTION);\r\n                ReceitaDAO.editarReceitaNome(receitas, nome);\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 2: //editarReceitaClasse\r\n                int receitaClasseSelecionado = JOptionPane.showOptionDialog(null, \"Escolha a NOVA CLASSE do(a) \" +\r\n                                ReceitaDAO.buscaTodos().get(receitas).getNome() + \":\", \"Editar Receita\",\r\n                        JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesReceitaClasse, opcoesReceitaClasse[0]);\r\n                ReceitaDAO.editarReceitaClasse(receitas, opcoesReceitaClasse[receitaClasseSelecionado]);\r\n                chamaMenuPrincipal();\r\n            case 3: //editarReceitaValorCusto\r\n                BigDecimal valorCusto = BigDecimal.valueOf(Double.parseDouble(JOptionPane.showInputDialog(null,\r\n                        \"Informe o NOVO VALOR DE CUSTO do(a) \" + ReceitaDAO.buscaTodos().get(receitas).getNome() + \":\",\r\n                        \"Editar Receita\", JOptionPane.DEFAULT_OPTION)));\r\n                ReceitaDAO.editarReceitaValorCusto(receitas, valorCusto);\r\n                chamaMenuPrincipal();\r\n                break;\r\n\r\n            case 4: // editarReceitaIngredientes\r\n                Integer contadorWhile = 0;\r\n\r\n                UnidadeMedidaEnum[] opcoesUnidadeMedida = {UnidadeMedidaEnum.KILO, UnidadeMedidaEnum.GRAMA, UnidadeMedidaEnum.LITRO,\r\n                        UnidadeMedidaEnum.MILILITRO, UnidadeMedidaEnum.UNIDADE};\r\n\r\n                Object[] selectionValuesReceitaIngrediente = ReceitaDAO.findReceitasIngredientesInArray(((String) selectionProduto));\r\n                String initialSelectionReceitaIngrediente = (String) selectionValuesReceita[0];\r\n                Object selectionReceitaIngrediente = JOptionPane.showInputDialog(null, \"Selecione o ingrediente da \"\r\n                                + ReceitaDAO.buscaTodos().get(receitas).getNome() + \" que você deseja editar:\",\r\n                        \"Editar Receita Ingredientes\", JOptionPane.DEFAULT_OPTION, null, selectionValuesReceitaIngrediente,\r\n                        initialSelectionReceitaIngrediente);\r\n                Integer receitaIngredientes = ReceitaDAO.buscaPosicaoReceitaIngrediente(receitas, (String) selectionReceitaIngrediente);\r\n\r\n                String nomeIngredienteEditarReceitaIngrediente = ReceitaDAO.buscaTodos().get(receitas).\r\n                        getListaIngredientes().get(receitaIngredientes).getProduto().getNome();\r\n\r\n                do {\r\n                    String[] opcoesEditarReceitaIngrediente = {\"Ingrediente\", \"Quantidade\", \"Unidade de medida\"};\r\n                    int menuEditarReceitaIngrediente = JOptionPane.showOptionDialog(null, \"Escolha a opção que você deseja editar do(a) \"\r\n                                    + nomeIngredienteEditarReceitaIngrediente + \":\", \"Editar Receita Ingrediente\",\r\n                            JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null,\r\n                            opcoesEditarReceitaIngrediente, opcoesEditarReceitaIngrediente[0]);\r\n\r\n                    switch (menuEditarReceitaIngrediente) {\r\n                        case 0: //NovoIngrediente\r\n\r\n                            Object[] selectionValuesNovoIngrediente = ProdutoDAO.findprodutosInArrayIngrediente();\r\n                            String initialSelectionNovoIngrediente = (String) selectionValuesNovoIngrediente[0];\r\n                            Object selectionNovoIngrediente = JOptionPane.showInputDialog(null, \"Selecione o NOVO INGREDIENTE para subtituir o(a) \" +\r\n                                            nomeIngredienteEditarReceitaIngrediente + \":\", \"Editar Receita Ingrediente\", JOptionPane.DEFAULT_OPTION, null,\r\n                                    selectionValuesNovoIngrediente, initialSelectionNovoIngrediente);\r\n                            List<Produto> produtos = ProdutoDAO.buscarPorNome((String) selectionNovoIngrediente);\r\n\r\n                            ReceitaDAO.editarReceitaIngrediente(receitas, receitaIngredientes, produtos.get(0));\r\n                            break;\r\n                        case 1: //NovaQuantidade\r\n                            Double novaQuantidade = Double.parseDouble(JOptionPane.showInputDialog(null, \"Informe a NOVA QUANTIDADE do(a) \"\r\n                                            + nomeIngredienteEditarReceitaIngrediente + \":\",\r\n                                    \"Editar Receita Ingrediente\", JOptionPane.DEFAULT_OPTION));\r\n                            ReceitaDAO.editarReceitaIngredienteQtd(receitas, receitaIngredientes, novaQuantidade);\r\n\r\n                            break;\r\n                        case 2: //NovaUnidade de medida\r\n                            int tipoNovaUnidadeSelecionada = JOptionPane.showOptionDialog(null, \"Escolha a NOVA UNIDADE DE MEDIDA do(a) \" +\r\n                                            nomeIngredienteEditarReceitaIngrediente + \":\", \"Editar Receita Ingrediente\",\r\n                                    JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesUnidadeMedida, opcoesUnidadeMedida[0]);\r\n                            ReceitaDAO.editarReceitaIngredienteUM(receitas, receitaIngredientes, opcoesUnidadeMedida[tipoNovaUnidadeSelecionada]);\r\n                            break;\r\n                    }\r\n\r\n                    String[] opcoesEditarOutraReceitaIngrediente = {\"Sim\", \"Não\"};\r\n                    int menuEditarOutraReceitaIngrediente = JOptionPane.showOptionDialog(null,\r\n                            \"Você deseja editar outra informação do(a) \"\r\n                                    + ReceitaDAO.buscaTodos().get(receitas).getListaIngredientes().get(receitaIngredientes).getProduto().getNome() +\r\n                                    \"?\", \"Editar Receita Ingrediente\",\r\n                            JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null,\r\n                            opcoesEditarOutraReceitaIngrediente, opcoesEditarOutraReceitaIngrediente[0]);\r\n                    switch (menuEditarOutraReceitaIngrediente) {\r\n\r\n                        case 0://SIM\r\n\r\n                            break;\r\n                        case 1://NÃO\r\n                            contadorWhile = 2;\r\n                            chamaMenuPrincipal();\r\n                            break;\r\n                    }\r\n                } while (contadorWhile <= 0);\r\n\r\n                break;\r\n\r\n        }\r\n    }\r\n\r\n    public static void chamaMenuRelatorios() {\r\n        String[] opcoesMenuRelatorio = {\"Compras\", \"Vendas\", \"ProdutoTeste\", \"ReceitaTeste\"};\r\n        int menuRelatorios = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Relatorios\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuRelatorio, opcoesMenuRelatorio[0]);\r\n\r\n        switch (menuRelatorios) {\r\n\r\n            case 0: //Compras\r\n                JOptionPane.showMessageDialog(null, CompraDAO.buscarTodos());\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 1: //Vendas\r\n                JOptionPane.showMessageDialog(null, VendaDAO.buscarTodos());\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 2: //ProdutoTeste\r\n                JOptionPane.showMessageDialog(null, ProdutoDAO.buscaTodos());\r\n                chamaMenuPrincipal();\r\n                break;\r\n            case 3: //ReceitaTeste\r\n                JOptionPane.showMessageDialog(null, ReceitaDAO.buscaTodos());\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n\r\n    public static void chamaMenuVenda() {\r\n        String[] opcoesMenuVenda = {\"Cadastrar Venda\", \"Remover Venda\", \"Editar Venda\", \"Voltar\"};\r\n        int menuCadastro = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Venda\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuVenda, opcoesMenuVenda[0]);\r\n\r\n        switch (menuCadastro) {\r\n            case 0: //CadastrarVenda\r\n                cadastroVenda();\r\n                break;\r\n            case 1: //RemoverVenda\r\n                //removerVenda();\r\n                break;\r\n            case 2: //EditarVenda\r\n                //editarVenda();\r\n                break;\r\n            case 3: //Voltar\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n\r\n    private static void cadastroVenda() {\r\n\r\n        FormaPagamentoEnum[] opcoesTipoPagamento = {FormaPagamentoEnum.CREDITO, FormaPagamentoEnum.DINHEIRO, FormaPagamentoEnum.DEBITO, FormaPagamentoEnum.PIX};\r\n\r\n        Object[] selectionValuesReceita = ReceitaDAO.findreceitasInArray();\r\n        String initialSelectionReceita = (String) selectionValuesReceita[0];\r\n        Object selectionVenda = JOptionPane.showInputDialog(null, \"Selecione a receita: \",\r\n                \"Cadastrar Venda\", JOptionPane.DEFAULT_OPTION, null, selectionValuesReceita, initialSelectionReceita);\r\n        List<Receita> receitas = ReceitaDAO.buscaTodos();\r\n\r\n        Integer quantidade = Integer.parseInt(JOptionPane.showInputDialog(null, \"Digite a quantidade\",\r\n                \"Cadastrar Compra\", JOptionPane.DEFAULT_OPTION));\r\n        int pagamentoSelecionado = JOptionPane.showOptionDialog(null, \"Escolha o tipo de pagamento:\", \"Cadastro Venda\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesTipoPagamento, opcoesTipoPagamento[0]);\r\n        Venda venda = new Venda(receitas.get(0), quantidade, opcoesTipoPagamento[pagamentoSelecionado]);\r\n\r\n\r\n        String[] opcoesMenuCadastroVenda = {\"Nova Venda\", \"Cancelar\"};\r\n        int menuCadastroVenda = JOptionPane.showOptionDialog(null, \"Escolha uma opção:\",\r\n                \"Cadastrar Nova Venda\",\r\n                JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesMenuCadastroVenda, opcoesMenuCadastroVenda[0]);\r\n\r\n        switch (menuCadastroVenda) {\r\n            case 0: //NovoCadastro\r\n                VendaDAO.salvarListaVenda(venda);\r\n                cadastroVenda();\r\n                break;\r\n            case 1: //Cancelar\r\n                chamaMenuPrincipal();\r\n                break;\r\n        }\r\n    }\r\n}
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/projetoFinalRestaurante/src/Main.java b/projetoFinalRestaurante/src/Main.java
--- a/projetoFinalRestaurante/src/Main.java	
+++ b/projetoFinalRestaurante/src/Main.java	
@@ -12,8 +12,6 @@
 
 
 public class Main {
-
-
     public static void main(String[] args) {
         ProdutoDAO.inputProdutos();
         CompraDAO.inputCompras();
@@ -124,7 +122,7 @@
             case 0: //CadastrarProdutoBebida
                 cadastroProdutoBebida();
                 break;
-            case 1: //RemoverProdutoIngrediente
+            case 1: //CadastroProdutoIngrediente
                 cadastroProdutoIngrediente();
                 break;
             case 2: //Voltar
@@ -135,14 +133,14 @@
     }
     private static void cadastroProdutoIngrediente() {
 
-        ProdutoEnum[] opcoesTipoPagamento = {ProdutoEnum.BEBIBA, ProdutoEnum.INGREDIENTE};
+        ProdutoEnum[] opcoesProdutoEnum = {ProdutoEnum.BEBIBA, ProdutoEnum.INGREDIENTE};
 
         Integer id = Integer.parseInt(JOptionPane.showInputDialog(null, "Informe o id:",
                 "Cadastro Produto Ingrediente", JOptionPane.DEFAULT_OPTION));
         String nomeProduto = JOptionPane.showInputDialog(null, "Informe o nome:",
                 "Cadastro Produto Ingrediente", JOptionPane.DEFAULT_OPTION);
 
-        Produto produto1 = new Produto(id, nomeProduto, opcoesTipoPagamento[1]);
+        Produto produto1 = new Produto(id, nomeProduto, opcoesProdutoEnum[1]);
 
 
         String[] opcoesMenuCadastroProduto = {"Novo Cadastro", "Cancelar", "Finalizar Cadastro"};
@@ -167,7 +165,7 @@
 
     private static void cadastroProdutoBebida() {
 
-        ProdutoEnum[] opcoesTipoProduto = {ProdutoEnum.BEBIBA, ProdutoEnum.INGREDIENTE};
+        ProdutoEnum[] opcoesProdutoEnum = {ProdutoEnum.BEBIBA, ProdutoEnum.INGREDIENTE};
 
         Integer id = Integer.parseInt(JOptionPane.showInputDialog(null, "Informe o id:",
                 "Cadastro Produto Bebida", JOptionPane.DEFAULT_OPTION));
@@ -177,7 +175,7 @@
         BigDecimal valorCustoBebida = BigDecimal.valueOf(Double.parseDouble(JOptionPane.showInputDialog(null,"Infome o valor de custo:",
                 "Cadastrar Produto Bebida", JOptionPane.DEFAULT_OPTION)));
 
-        Produto produto1 = new Produto(id,nomeProduto,opcoesTipoPagamento[0],valorCustoBebida);
+        Produto produto1 = new Produto(id,nomeProduto,opcoesProdutoEnum[0],valorCustoBebida);
 
         String[] opcoesMenuCadastroProduto = {"Novo Cadastro", "Cancelar", "Finalizar Cadastro"};
         int menuCadastroProduto = JOptionPane.showOptionDialog(null, "Escolha uma opção:",
@@ -558,7 +556,7 @@
         List<Receita> receitas = ReceitaDAO.buscaTodos();
 
         Integer quantidade = Integer.parseInt(JOptionPane.showInputDialog(null, "Digite a quantidade",
-                "Cadastrar Compra", JOptionPane.DEFAULT_OPTION));
+                "Cadastrar Venda", JOptionPane.DEFAULT_OPTION));
         int pagamentoSelecionado = JOptionPane.showOptionDialog(null, "Escolha o tipo de pagamento:", "Cadastro Venda",
                 JOptionPane.DEFAULT_OPTION, JOptionPane.INFORMATION_MESSAGE, null, opcoesTipoPagamento, opcoesTipoPagamento[0]);
         Venda venda = new Venda(receitas.get(0), quantidade, opcoesTipoPagamento[pagamentoSelecionado]);
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"e74c2183-e8d9-403f-9b39-3fd44ea3b088\" name=\"Changes\" comment=\"\" />\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectId\" id=\"2PqnkoQG5y4J71gZJcixjLKCpdY\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\"><![CDATA[{\r\n  \"keyToString\": {\r\n    \"RunOnceActivity.ShowReadmeOnStart\": \"true\",\r\n    \"last_opened_file_path\": \"C:/Users/User/Desktop/projeto final/projetoFinalRestaurante\",\r\n    \"settings.editor.selected.configurable\": \"configurable.group.build\"\r\n  }\r\n}]]></component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"e74c2183-e8d9-403f-9b39-3fd44ea3b088\" name=\"Changes\" comment=\"\" />\r\n      <created>1684193624362</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1684193624362</updated>\r\n    </task>\r\n    <servers />\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	
+++ b/.idea/workspace.xml	
@@ -4,7 +4,12 @@
     <option name="autoReloadType" value="SELECTIVE" />
   </component>
   <component name="ChangeListManager">
-    <list default="true" id="e74c2183-e8d9-403f-9b39-3fd44ea3b088" name="Changes" comment="" />
+    <list default="true" id="e74c2183-e8d9-403f-9b39-3fd44ea3b088" name="Changes" comment="">
+      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/projetoFinalRestaurante/src/Main.java" beforeDir="false" afterPath="$PROJECT_DIR$/projetoFinalRestaurante/src/Main.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/projetoFinalRestaurante/src/model/Estoque.java" beforeDir="false" afterPath="$PROJECT_DIR$/projetoFinalRestaurante/src/model/Estoque.java" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/projetoFinalRestaurante/src/repository/VendaDAO.java" beforeDir="false" afterPath="$PROJECT_DIR$/projetoFinalRestaurante/src/repository/VendaDAO.java" afterDir="false" />
+    </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
     <option name="HIGHLIGHT_NON_ACTIVE_CHANGELIST" value="false" />
@@ -24,7 +29,7 @@
   <component name="PropertiesComponent"><![CDATA[{
   "keyToString": {
     "RunOnceActivity.ShowReadmeOnStart": "true",
-    "last_opened_file_path": "C:/Users/User/Desktop/projeto final/projetoFinalRestaurante",
+    "last_opened_file_path": "C:/Users/User/Desktop/projeto final",
     "settings.editor.selected.configurable": "configurable.group.build"
   }
 }]]></component>
Index: projetoFinalRestaurante/src/repository/VendaDAO.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package repository;\r\n\r\nimport model.Compra;\r\nimport model.FormaPagamentoEnum;\r\nimport model.Venda;\r\n\r\nimport java.time.LocalDate;\r\nimport java.util.ArrayList;\r\nimport java.util.List;\r\n\r\npublic class VendaDAO {\r\n    static List<Venda> listaVenda = new ArrayList<>();\r\n\r\n    public static void inputVendas() {\r\n        if (VendaDAO.listaVenda.isEmpty()) {\r\n            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(1),2, FormaPagamentoEnum.PIX));\r\n            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(1), 1, FormaPagamentoEnum.CREDITO));\r\n            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(2), 1,  FormaPagamentoEnum.CREDITO));\r\n            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(2), 1, FormaPagamentoEnum.DINHEIRO));\r\n            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(3), 1, FormaPagamentoEnum.DEBITO));\r\n            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(3), 1, FormaPagamentoEnum.PIX));\r\n        }\r\n    }\r\n\r\n    public static void salvarListaVenda(Venda venda) {\r\n        listaVenda.add(venda);\r\n    }\r\n\r\n    public static List<Venda> buscarTodos() {\r\n        inputVendas();\r\n        return listaVenda;\r\n    }\r\n\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/projetoFinalRestaurante/src/repository/VendaDAO.java b/projetoFinalRestaurante/src/repository/VendaDAO.java
--- a/projetoFinalRestaurante/src/repository/VendaDAO.java	
+++ b/projetoFinalRestaurante/src/repository/VendaDAO.java	
@@ -13,12 +13,12 @@
 
     public static void inputVendas() {
         if (VendaDAO.listaVenda.isEmpty()) {
-            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(1),2, FormaPagamentoEnum.PIX));
-            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(1), 1, FormaPagamentoEnum.CREDITO));
-            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(2), 1,  FormaPagamentoEnum.CREDITO));
-            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(2), 1, FormaPagamentoEnum.DINHEIRO));
-            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(3), 1, FormaPagamentoEnum.DEBITO));
-            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(3), 1, FormaPagamentoEnum.PIX));
+            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(0),2, FormaPagamentoEnum.PIX));
+//            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(1), 1, FormaPagamentoEnum.CREDITO));
+//            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(2), 1,  FormaPagamentoEnum.CREDITO));
+//            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(2), 1, FormaPagamentoEnum.DINHEIRO));
+//            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(3), 1, FormaPagamentoEnum.DEBITO));
+//            listaVenda.add(new Venda(ReceitaDAO.listaReceita.get(3), 1, FormaPagamentoEnum.PIX));
         }
     }
 
